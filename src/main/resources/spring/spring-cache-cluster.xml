<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
         http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<cache:annotation-driven cache-manager="cacheManager" />

    <!-- jedis 配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >
        <!--最大空闲数-->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!--最大建立连接等待时间-->
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean >

    <!--配置文件加载-->
    <!-- <bean id="resourcePropertySource" class="org.springframework.core.io.support.ResourcePropertySource">
        <constructor-arg name="name" value="init.properties"/>
        <constructor-arg name="resource" value="init.properties"/>
    </bean> -->
    <!--redisCluster配置-->
    <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
    	<property name="maxRedirects" value="3"></property>
        <property name="clusterNodes">
        	<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.node1.host}" />
					<constructor-arg name="port" value="${redis.node1.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.node2.host}" />
					<constructor-arg name="port" value="${redis.node2.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.node3.host}" />
					<constructor-arg name="port" value="${redis.node3.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.node4.host}" />
					<constructor-arg name="port" value="${redis.node4.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.node5.host}" />
					<constructor-arg name="port" value="${redis.node5.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.node6.host}" />
					<constructor-arg name="port" value="${redis.node6.port}" />
				</bean>
			</set>
        </property>
    </bean>

	<bean id="jeidsConnectionFactory"
    	class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    	<constructor-arg ref="redisClusterConfiguration" />
    	<constructor-arg ref="jedisPoolConfig" />
	</bean>
	<!-- redis 访问的模版 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    	<property name="connectionFactory" ref="jeidsConnectionFactory" />
	</bean>
	
	<!-- spring自己的缓存管理器，这里定义了缓存位置名称 ，即注解中的value -->    
     <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">    
         <property name="caches">    
            <set>    
                <!-- 这里可以配置多个redis -->  
                <!-- <bean class="com.cn.util.RedisCache">    
                     <property name="redisTemplate" ref="redisTemplate" />    
                     <property name="name" value="default"/>    
                </bean> -->  
                <!--common名称要在类或方法的注解中使用    -->  
                <bean class="com.discovery.darchrow.service.RedisCache">    
                     <property name="redisTemplate" ref="redisTemplate" />    
                     <property name="name" value="common"/>    
                </bean>  
                <!-- <bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="common" /> -->
            </set>    
         </property>    
     </bean> 

</beans>